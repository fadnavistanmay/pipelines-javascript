# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

#trigger:
#- master

stages:
- stage: firstruntar
  displayName: 'Empty cache Tar'
  variables:
    CACHE_PACK: tar
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: firstrunfiles
  displayName: 'Empty Cache Files'
  variables:
    AZP_CACHING_CONTENT_FORMAT: FILES
    CACHE_PACK: files
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: secondruntar
  dependsOn: firstruntar
  displayName: 'Cached Tar'
  variables:
    CACHE_PACK: tar
  jobs:
  - template: azure-pipelines-jobs.yml

- stage: secondrunfiles
  dependsOn: firstrunfiles
  displayName: 'Cached Files'
  variables:
    AZP_CACHING_CONTENT_FORMAT: files
    CACHE_PACK: files
    SECOND_FILES: files
  jobs:
  - template: azure-pipelines-jobs.yml


#pool:
#  vmImage: 'ubuntu-latest'

variables:
  CACHE_FOLDER: $(Build.SourcesDirectory)/node_modules
  CACHE_KEY: yarn | $(Agent.OS) | $(Build.BuildId) | $(CACHE_PACK) | yarn.lock
  system.debug: true

#steps:
#- task: NodeTool@0
#  inputs:
#    versionSpec: '10.x'
#  displayName: 'Install Node.js'
#
#- task: CacheBeta@1
#  inputs:
#    key: yarn3323 | $(Agent.OS) | yarn.lock
#    path: $(YARN_CACHE_FOLDER)
#    cacheHitVar: CACHE_RESTORED 
#  displayName: 'Cache yarn packages'
#
#- script: |
#    yarn --frozen-lockfile
#  displayName: 'Install dependencies'
#  #condition: ne(variables.CACHE_RESTORED, 'true')
#
#- script: yarn build
#  displayName: 'npm build'



